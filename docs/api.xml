<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="style.css"?>
<spec>
	<version>2.0</version>
	<methods>
		<legend>
			<legend-item>Категория</legend-item>
			<legend-item>Задача</legend-item>
			<legend-item>Метод</legend-item>
			<legend-item>Параметры</legend-item>
			<legend-item>Тип</legend-item>
			<legend-item>Результат</legend-item>
		</legend>
		<method>
			<cat>Авторизация</cat>
			<name>Вход</name>
			<url>/auth/login/</url>
			<params>
				<param>
					<par-name>login</par-name>
					<par-desc>Логин пользователя</par-desc>
				</param>
				<param>
					<par-name>pass</par-name>
					<par-desc>Пароль пользователя</par-desc>
				</param>
				<param-optional>
					<par-name>api</par-name>
					<par-desc>Версия API клиента</par-desc>
				</param-optional>
			</params>
			<type>POST</type>
			<returns>
				<note>Количество и частота попыток не ограничены.</note>
				<return>
					<return-value>{"code":"0",...}</return-value>
					<return-condition>Авторизация прошла успешно</return-condition>
				</return>
				<return>
					<return-value>{"code":"4050","msg":"###",...}</return-value>
					<return-condition>Авторизация прошла успешно; версия API клиента устарела, но ещё поддерживается</return-condition>
				</return>
				<return>
					<return-value>{"code":"4051","msg":"###",...}</return-value>
					<return-condition>Ошибка авторизации: версия API клиента устарела и больше не поддерживается</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка авторизации: неверный логин или пароль</return-condition>
				</return>
				<return>
					<return-value>{"code":"400","msg":"###",...}</return-value>
					<return-condition>Ошибка авторизации: параметры неверны либо отсутствуют</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method>
		<method>
			<cat>Авторизация</cat>
			<name>Выход</name>
			<url>/auth/logout/</url>
			<params>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>{"code":"0",...}</return-value>
					<return-condition>Выход проведён успешно</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method>
		<method>
			<cat>Авторизация</cat>
			<name>Запрос статуса авторизации</name>
			<url>/auth/status/</url>
			<params>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>{"code":"0","status":"1",...}</return-value>
					<return-condition>Клиент авторизован</return-condition>
				</return>
				<return>
					<return-value>{"code":"0","status":"0",...}</return-value>
					<return-condition>Клиент не авторизован</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method>
		<method>
			<cat>Система</cat>
			<name>Получение версии API сервера</name>
			<url>/version/</url>
			<params>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>{"code":"0","version":"###",...}</return-value>
					<return-condition>Всё хорошо</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method>
		<method>
			<cat>Система</cat>
			<name>Отправка сообщения на e-mail разработчика</name>
			<url>/service/mail/</url>
			<params>
				<param>
					<par-name>msg</par-name>
					<par-desc>Текст сообщения</par-desc>
				</param>
			</params>
			<type>POST</type>
			<returns>
				<return>
					<return-value>{"code":"0",...}</return-value>
					<return-condition>Операция прошла успешно</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка: отсутствует авторизация</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method>
		<method-todo>
			<cat>Дневник</cat>
			<name>Получение записей дневника, относящихся к некоторому интервалу времени</name>
			<url>/diary/time/</url>
			<params>
				<param>
					<par-name>from</par-name>
					<par-desc>Время начала выборки (UTC) в стандартном формате</par-desc>
				</param>
				<param>
					<par-name>to</par-name>
					<par-desc>Время конца выборки (UTC) в стандартном формате</par-desc>
				</param>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>{"code":"0","items":[{ (item) }, ...]}, отсортирован по возрастанию времени записи</return-value>
					<return-condition>Всё хорошо</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка: отсутствует авторизация</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method-todo>
		<method-todo>
			<cat>Дневник</cat>
			<name>Получение записей дневника, изменённых после указанного времени</name>
			<url>/diary/mod/</url>
			<params>
				<param>
					<par-name>from</par-name>
					<par-desc>Время (UTC) в стандартном формате</par-desc>
				</param>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>{"code":"0","items":[{ (item) }, ...]}, отсортирован по возрастанию времени записи</return-value>
					<return-condition>Всё хорошо</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка: отсутствует авторизация</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method-todo>
		<method-todo>
			<cat>Дневник</cat>
			<name>Выгрузка записей дневника на сервер</name>
			<url>/diary/</url>
			<params>
				<param>
					<par-name>items</par-name>
					<par-desc>[{ (item) }, ...]</par-desc>
				</param>
			</params>
			<type>POST</type>
			<returns>
				<note>TODO: Сделать ограничение на максимальный размер заметки / максимальное количество записей / максимальное количество блюд в приёме пищи / максимальный размер записи.</note>
				<return>
					<return-value>{"code":"0",...}</return-value>
					<return-condition>Операция прошла успешно</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка: отсутствует авторизация</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method-todo>
		<method-todo>
			<cat>Дневник</cat>
			<name>[new] Создание/обновление одной или нескольких записей дневника</name>
			<url>console.php</url>
			<params>
				<param>
					<par-name>diary-write</par-name>
					<par-desc>Обязательный, пустой</par-desc>
				</param>
				<param>
					<par-name>content</par-name>
					<par-desc>Массив записей в формате JSON</par-desc>
				</param>
			</params>
			<type>POST</type>
			<returns>
				<note>TODO: Сделать ограничение на максимальный размер записи</note>
				<return>
					<return-value>Стандартный JSON-ответ со статусом выполнения операции</return-value>
					<return-condition>Всегда</return-condition>
				</return>
			</returns>
		</method-todo>
		<method-todo>
			<cat>Дневник</cat>
			<name>[new] Получение всех записей для указанного интервала времени</name>
			<url>console.php</url>
			<params>
				<param>
					<par-name>diary-read-range</par-name>
					<par-desc>Обязательный, пустой</par-desc>
				</param>
				<param>
					<par-name>from</par-name>
					<par-desc>Время начала интервала (UTC)</par-desc>
				</param>
				<param>
					<par-name>to</par-name>
					<par-desc>Время конца интервала (UTC)</par-desc>
				</param>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>JSON-ответ с массивом отсортированных по времени записей в формате JSON / кодом ошибки</return-value>
					<return-condition>Всегда</return-condition>
				</return>
			</returns>
		</method-todo>
		<method-todo>
			<cat>Дневник</cat>
			<name>[new] Получение записей дневника, изменённых после указанного времени</name>
			<url>console.php</url>
			<params>
				<param>
					<par-name>diary-read-changes</par-name>
					<par-desc>Обязательный, пустой</par-desc>
				</param>
				<param>
					<par-name>from</par-name>
					<par-desc>Время (UTC)</par-desc>
				</param>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>JSON-ответ с массивом отсортированных по времени записей в формате JSON / кодом ошибки</return-value>
					<return-condition>Всегда</return-condition>
				</return>
			</returns>
		</method-todo>
		<method-todo>
			<cat>Дневник</cat>
			<name>[new] Получение записей с указанными GUID</name>
			<url>console.php</url>
			<params>
				<param>
					<par-name>diary-read-guid</par-name>
					<par-desc>Обязательный, пустой</par-desc>
				</param>
				<param>
					<par-name>guids</par-name>
					<par-desc>Массив GUID  в формате JSON</par-desc>
				</param>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>JSON-ответ с массивом отсортированных по времени записей в формате JSON / кодом ошибки</return-value>
					<return-condition>Всегда</return-condition>
				</return>
			</returns>
		</method-todo>
		<method>
			<cat>База продуктов</cat>
			<name>Получение версии базы продуктов</name>
			<url>console.php</url>
			<params>
				<param>
					<par-name>foodbase:getVersion</par-name>
					<par-desc>Обязательный, пустой</par-desc>
				</param>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>(номер версии — целое неотрицательное число)</return-value>
					<return-condition>Всё хорошо</return-condition>
				</return>
				<return>
					<return-value>0</return-value>
					<return-condition>База не существует</return-condition>
				</return>
				<return>
					<return-value>FAIL</return-value>
					<return-condition>Произошла ошибка</return-condition>
				</return>
				<return>
					<return-value>Error: log in first</return-value>
					<return-condition>Клиент не авторизован</return-condition>
				</return>
			</returns>
		</method>
		<method>
			<cat>База продуктов</cat>
			<name>Получение базы продуктов с сервера</name>
			<url>console.php</url>
			<params>
				<param>
					<par-name>foodbase:download</par-name>
					<par-desc>Обязательный, пустой</par-desc>
				</param>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>(База продуктов в формате XML)</return-value>
					<return-condition>База существует</return-condition>
				</return>
				<return>
					<return-value></return-value>
					<return-condition>База не существует</return-condition>
				</return>
				<return>
					<return-value>FAIL</return-value>
					<return-condition>Произошла ошибка</return-condition>
				</return>
				<return>
					<return-value>Error: log in first</return-value>
					<return-condition>Клиент не авторизован</return-condition>
				</return>
			</returns>
		</method>
		<method>
			<cat>База продуктов</cat>
			<name>Загрузка базы продуктов на сервер</name>
			<url>console.php</url>
			<params>
				<param>
					<par-name>foodbase:upload</par-name>
					<par-desc>Обязательный, пустой</par-desc>
				</param>
				<param>
					<par-name>version</par-name>
					<par-desc>Номер версии загружаемой базы</par-desc>
				</param>
				<param>
					<par-name>data</par-name>
					<par-desc>База продуктов в формате XML</par-desc>
				</param>
			</params>
			<type>POST</type>
			<returns>
				<return>
					<return-value>DONE</return-value>
					<return-condition>Загрузка прошла успешно</return-condition>
				</return>
				<return>
					<return-value>FAIL</return-value>
					<return-condition>Произошла ошибка</return-condition>
				</return>
				<return>
					<return-value>Error: log in first</return-value>
					<return-condition>Клиент не авторизован</return-condition>
				</return>
			</returns>
		</method>
		<method>
			<cat>База блюд</cat>
			<name>Получение версии базы блюд</name>
			<url>console.php</url>
			<params>
				<param>
					<par-name>dishbase:getVersion</par-name>
					<par-desc>Обязательный, пустой</par-desc>
				</param>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>(номер версии — целое неотрицательное число)</return-value>
					<return-condition>Всё хорошо</return-condition>
				</return>
				<return>
					<return-value>0</return-value>
					<return-condition>База не существует</return-condition>
				</return>
				<return>
					<return-value>FAIL</return-value>
					<return-condition>Произошла ошибка</return-condition>
				</return>
				<return>
					<return-value>Error: log in first</return-value>
					<return-condition>Клиент не авторизован</return-condition>
				</return>
			</returns>
		</method>
		<method>
			<cat>База блюд</cat>
			<name>Получение базы блюд с сервера</name>
			<url>console.php</url>
			<params>
				<param>
					<par-name>dishbase:download</par-name>
					<par-desc>Обязательный, пустой</par-desc>
				</param>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>(База блюд в формате XML)</return-value>
					<return-condition>Всё хорошо</return-condition>
				</return>
				<return>
					<return-value>FAIL</return-value>
					<return-condition>Произошла ошибка</return-condition>
				</return>
				<return>
					<return-value>Error: log in first</return-value>
					<return-condition>Клиент не авторизован</return-condition>
				</return>
			</returns>
		</method>
		<method>
			<cat>База блюд</cat>
			<name>Загрузка базы блюд на сервер</name>
			<url>console.php</url>
			<params>
				<param>
					<par-name>dishbase:upload</par-name>
					<par-desc>Обязательный, пустой</par-desc>
				</param>
				<param>
					<par-name>version</par-name>
					<par-desc>Номер версии загружаемой базы</par-desc>
				</param>
				<param>
					<par-name>data</par-name>
					<par-desc>База блюд в формате XML</par-desc>
				</param>
			</params>
			<type>POST</type>
			<returns>
				<return>
					<return-value>DONE</return-value>
					<return-condition>Загрузка прошла успешно</return-condition>
				</return>
				<return>
					<return-value>FAIL</return-value>
					<return-condition>Произошла ошибка</return-condition>
				</return>
				<return>
					<return-value>Error: log in first</return-value>
					<return-condition>Клиент не авторизован</return-condition>
				</return>
			</returns>
		</method>
		<method>
			<cat>Коэффициенты</cat>
			<name>Выгрузка коэффициентов на сервер</name>
			<url>console.php</url>
			<params>
				<param>
					<par-name>koofs:upload</par-name>
					<par-desc>Обязательный, пустой</par-desc>
				</param>
				<param>
					<par-name>data</par-name>
					<par-desc>Коэффициенты в формате JSON</par-desc>
				</param>
			</params>
			<type>POST</type>
			<returns>
				<return>
					<return-value>DONE</return-value>
					<return-condition>Загрузка прошла успешно</return-condition>
				</return>
				<return>
					<return-value>FAIL</return-value>
					<return-condition>Произошла ошибка</return-condition>
				</return>
				<return>
					<return-value>Error: log in first</return-value>
					<return-condition>Клиент не авторизован</return-condition>
				</return>
			</returns>
		</method>
		<method>
			<cat>Коэффициенты</cat>
			<name>Получение коэффициентов</name>
			<url>console.php</url>
			<params>
				<param>
					<par-name>koofs:download</par-name>
					<par-desc>Обязательный, пустой</par-desc>
				</param>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>(коэффициенты в формате JSON)</return-value>
					<return-condition>Коэффициенты существуют</return-condition>
				</return>
				<return>
					<return-value></return-value>
					<return-condition>Коэффициенты не существуют</return-condition>
				</return>
				<return>
					<return-value>Error: log in first</return-value>
					<return-condition>Клиент не авторизован</return-condition>
				</return>
			</returns>
		</method>
	</methods>
</spec>