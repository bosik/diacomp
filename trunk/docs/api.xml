<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="style.css"?>
<spec>
	<version>2.0</version>
	<methods>
		<legend>
			<legend-item>Категория</legend-item>
			<legend-item>Задача</legend-item>
			<legend-item>Метод</legend-item>
			<legend-item>Параметры</legend-item>
			<legend-item>Тип</legend-item>
			<legend-item>Результат</legend-item>
		</legend>
		<method>
			<cat>Авторизация</cat>
			<name>Вход</name>
			<url>/auth/login/</url>
			<params>
				<param>
					<par-name>login</par-name>
					<par-desc>Логин пользователя</par-desc>
				</param>
				<param>
					<par-name>pass</par-name>
					<par-desc>Пароль пользователя</par-desc>
				</param>
				<param-optional>
					<par-name>api</par-name>
					<par-desc>Версия API клиента</par-desc>
				</param-optional>
			</params>
			<type>POST</type>
			<returns>
				<note>Количество и частота попыток не ограничены.</note>
				<return>
					<return-value>{"code":"0",...}</return-value>
					<return-condition>Авторизация прошла успешно</return-condition>
				</return>
				<return>
					<return-value>{"code":"4050","msg":"###",...}</return-value>
					<return-condition>Авторизация прошла успешно; версия API клиента устарела, но ещё поддерживается</return-condition>
				</return>
				<return>
					<return-value>{"code":"4051","msg":"###",...}</return-value>
					<return-condition>Ошибка авторизации: версия API клиента устарела и больше не поддерживается</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка авторизации: неверный логин или пароль</return-condition>
				</return>
				<return>
					<return-value>{"code":"400","msg":"###",...}</return-value>
					<return-condition>Ошибка авторизации: параметры неверны либо отсутствуют</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method>
		<method-todo>
			<cat>Авторизация</cat>
			<name>Выход</name>
			<url>/auth/logout/</url>
			<params>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>{"code":"0",...}</return-value>
					<return-condition>Выход проведён успешно</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method-todo>
		<method-todo>
			<cat>Система</cat>
			<name>Получение версии API сервера</name>
			<url>/service/version/</url>
			<params>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>{"code":"0","current":"###","support":"###",...} - содержит текущую и самую раннюю поддерживаемую версии</return-value>
					<return-condition>Всё хорошо</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method-todo>
		<method-todo>
			<cat>Система</cat>
			<name>Отправка сообщения на e-mail разработчика</name>
			<url>/service/mail/</url>
			<params>
				<param>
					<par-name>msg</par-name>
					<par-desc>Текст сообщения</par-desc>
				</param>
			</params>
			<type>POST</type>
			<returns>
				<return>
					<return-value>{"code":"0",...}</return-value>
					<return-condition>Операция прошла успешно</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка: отсутствует авторизация</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method-todo>
		<method>
			<cat>Дневник</cat>
			<name>Получение всех записей для указанного интервала времени</name>
			<url>/diary/period/</url>
			<params>
				<param>
					<par-name>start_time</par-name>
					<par-desc>Время начала выборки (UTC) в стандартном формате</par-desc>
				</param>
				<param>
					<par-name>end_time</par-name>
					<par-desc>Время конца выборки (UTC) в стандартном формате</par-desc>
				</param>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>{"code":"0","items":[{ (item) }, ...]}, отсортирован по возрастанию времени записи</return-value>
					<return-condition>Всё хорошо</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка: отсутствует авторизация</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method>
		<method>
			<cat>Дневник</cat>
			<name>Получение записей дневника, изменённых после указанного времени</name>
			<url>/diary/new/</url>
			<params>
				<param>
					<par-name>mod_after</par-name>
					<par-desc>Время (UTC) в стандартном формате</par-desc>
				</param>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>{"code":"0","items":[{ (item) }, ...]}, отсортирован по возрастанию времени записи</return-value>
					<return-condition>Всё хорошо</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка: отсутствует авторизация</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method>
		<method-todo>
			<cat>Дневник</cat>
			<name>Получение записей с указанными GUID</name>
			<url>/diary/guid/</url>
			<params>
				<param>
					<par-name>guids</par-name>
					<par-desc>["guid":"...", ...]</par-desc>
				</param>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>{"code":"0","items":[{ (item) }, ...]}, отсортирован по возрастанию времени записи</return-value>
					<return-condition>Всё хорошо</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка: отсутствует авторизация</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method-todo>
		<method>
			<cat>Дневник</cat>
			<name>Создание/сохранение одной или нескольких записей дневника</name>
			<url>/diary/</url>
			<params>
				<param>
					<par-name>items</par-name>
					<par-desc>[item, ...]</par-desc>
				</param>
			</params>
			<type>POST</type>
			<returns>
				<note>TODO: Сделать ограничение на максимальный размер заметки / максимальное количество записей / максимальное количество блюд в приёме пищи / максимальный размер записи.</note>
				<return>
					<return-value>{"code":"0",...}</return-value>
					<return-condition>Операция прошла успешно</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка: отсутствует авторизация</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method>
		<method-todo>
			<cat>База продуктов</cat>
			<name>Получение всех продуктов</name>
			<url>/foodbase/all/</url>
			<params>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>{"code":"0","items":[item, ...]}, отсортирован по алфавиту</return-value>
					<return-condition>Всё хорошо</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка: отсутствует авторизация</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method-todo>
		<method-todo>
			<cat>База продуктов</cat>
			<name>Получение продуктов, изменённых после указанного времени</name>
			<url>/foodbase/mod/</url>
			<params>
				<param>
					<par-name>from</par-name>
					<par-desc>Время (UTC) в стандартном формате</par-desc>
				</param>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>{"code":"0","items":[{ (item) }, ...]}, отсортирован по алфавиту</return-value>
					<return-condition>Всё хорошо</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка: отсутствует авторизация</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method-todo>
		<method-todo>
			<cat>База продуктов</cat>
			<name>Получение продуктов с указанными GUID</name>
			<url>/foodbase/guid/</url>
			<params>
				<param>
					<par-name>guids</par-name>
					<par-desc>["guid":"...", ...]</par-desc>
				</param>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>{"code":"0","items":[{ (item) }, ...]}, отсортирован по алфавиту</return-value>
					<return-condition>Всё хорошо</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка: отсутствует авторизация</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method-todo>
		<method-todo>
			<cat>База продуктов</cat>
			<name>Создание/сохранение одного или нескольких продуктов</name>
			<url>/foodbase/</url>
			<params>
				<param>
					<par-name>items</par-name>
					<par-desc>[item, ...]</par-desc>
				</param>
			</params>
			<type>POST</type>
			<returns>
				<return>
					<return-value>{"code":"0",...}</return-value>
					<return-condition>Операция прошла успешно</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка: отсутствует авторизация</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method-todo>
		<method-todo>
			<cat>Коэффициенты</cat>
			<name>Сохранение коэффициентов</name>
			<url>/model/</url>
			<params>
				<param>
					<par-name>data</par-name>
					<par-desc>Коэффициенты в формате JSON</par-desc>
				</param>
			</params>
			<type>POST</type>
			<returns>
				<return>
					<return-value>{"code":"0",...}</return-value>
					<return-condition>Операция прошла успешно</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка: отсутствует авторизация</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method-todo>
		<method-todo>
			<cat>Коэффициенты</cat>
			<name>Загрузка коэффициентов</name>
			<url>/model/</url>
			<params>
			</params>
			<type>GET</type>
			<returns>
				<return>
					<return-value>(коэффициенты в формате JSON)</return-value>
					<return-condition>Всё хорошо</return-condition>
				</return>
				<return>
					<return-value>{"code":"401","msg":"###",...}</return-value>
					<return-condition>Ошибка: отсутствует авторизация</return-condition>
				</return>
				<return>
					<return-value>{"code":"500","msg":"###",...}</return-value>
					<return-condition>Внутренняя ошибка сервера</return-condition>
				</return>
			</returns>
		</method-todo>
	</methods>
</spec>